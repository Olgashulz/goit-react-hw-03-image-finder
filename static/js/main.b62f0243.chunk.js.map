{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ErrorResponse/ErrorResponse.js","components/Loader/Loader.js","servises/app.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleInputValueChange","event","setState","currentTarget","value","toLowerCase","handleOnSubmit","preventDefault","trim","toast","error","props","onSubmit","removeImages","className","this","type","onChange","Component","ImageGalleryItem","onToggle","images","map","item","onClick","largeImageURL","src","webformatURL","alt","tags","id","ErrorResponse","message","console","log","LoaderFnc","color","height","width","timeout","fetchImages","page","a","fetch","then","response","ok","json","Promise","reject","Error","dataImages","hits","ImageGallery","status","prevProps","PrevState","gallery","prevState","takeImages","onOpen","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","showModal","handleSearchSubmit","toggleModal","largeImage","style","maxWidth","margin","padding","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b62f0243.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInputValueChange = event => {\n    // console.log(event.currentTarget.value.toLowerCase())\n    this.setState({ inputValue: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.inputValue.trim() === '') {\n      return toast.error('Please enter keyword.', {});\n    }\n\n    this.props.onSubmit(this.state.inputValue);\n    this.props.removeImages();\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleOnSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={this.handleInputValueChange}\n            // autocomplete=\"off\"\n            // autofocus\n            // placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\n\n// const ImageGalleryItem = ({ id, src, alt, modalSrc, toggle }) => (\n//   <li className=\"ImageGalleryItem\" key={id}>\n//     <img src={src} alt={alt[0]} className=\"ImageGalleryItem-image\" onClick={() => toggle(modalSrc)} />\n//   </li>\n// );\n\nconst ImageGalleryItem = ({ onToggle, images }) => {\n  return (\n    <>\n      {images.map(item => {\n        return (\n          <li\n            onClick={() => onToggle(item.largeImageURL)}\n            className=\"ImageGalleryItem\"\n            key={item.id}\n          >\n            <img\n              src={item.webformatURL}\n              alt={item.tags}\n              className=\"ImageGalleryItem-image\"\n              data-largeimage={item.largeImageURL}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\n\nexport default function ErrorResponse({ message }) {\n  console.log('Ошибка');\n  return <h3>{message}</h3>;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function LoaderFnc() {\n  return (\n    <div className=\"loaderContainer\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={50}\n        width={50}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","export const fetchImages = async (inputValue, page) => {\n  const dataImages = await fetch(\n    `https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=${inputValue}&page=${page}&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject({\n      error: new Error(`Your request ${inputValue} did not return any results`),\n    });\n  });\n  // console.log(dataImages.hits)\n  return dataImages.hits;\n};\n","import React, { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport ErrorResponse from '../ErrorResponse';\nimport LoaderFnc from '../Loader';\nimport { fetchImages } from '../../servises/app';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    error: null,\n    status: 'resolved',\n    // page: 1,\n  };\n\n  async componentDidUpdate(prevProps, PrevState) {\n    const inputValue = this.props.inputValue;\n    const page = this.props.page;\n\n    if (prevProps.inputValue !== inputValue || prevProps.page !== page) {\n      try {\n        this.setState({ status: 'pending' });\n        const gallery = await fetchImages(inputValue, page);\n\n        this.setState({ status: 'resolved' });\n\n        this.setState(prevState => ({\n          images: [...prevState.images, ...gallery],\n        }));\n        this.props.takeImages(this.state.images);\n      } catch (error) {\n        this.setState({ error, status: 'rejected' });\n      }\n    }\n  }\n  render() {\n    const { error, status, images } = this.state;\n    const { onOpen } = this.props;\n\n    // if (status === 'idle') {\n    //     return <h1>Что ищем?</h1>;\n    // }\n\n    if (status === 'pending') {\n      return <LoaderFnc />;\n    }\n\n    if (status === 'rejected') {\n      return <ErrorResponse message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem images={images} onToggle={onOpen} />\n        </ul>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose(event);\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose(event);\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\n// Modal.propTypes = {\n//     onClose: PropTypes.func.isRequired,\n// };\n\nexport default Modal;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nexport default class App extends Component {\n  state = {\n    inputValue: '',\n    images: [],\n    page: 1,\n    showModal: false,\n  };\n\n  handleSearchSubmit = inputValue => {\n    console.log(inputValue);\n    this.setState({ images: [] });\n    this.setState({ inputValue });\n  };\n\n  takeImages = images => {\n    // console.log(images);\n    this.setState({ images: [...images] });\n  };\n\n  removeImages = () => {\n    this.setState({ images: [] });\n  };\n\n  onLoadMore = event => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n    this.handleSearchSubmit(this.state.inputValue);\n  };\n\n  toggleModal = largeImage => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n    this.setState({ largeImage: largeImage });\n  };\n\n  render() {\n    const { inputValue, showModal, largeImage, page } = this.state;\n    return (\n      <div style={{ maxWidth: 1170, margin: '0 auto', padding: 20 }}>\n        <Searchbar\n          onSubmit={this.handleSearchSubmit}\n          removeImages={this.removeImages}\n        />\n        <ImageGallery\n          inputValue={inputValue}\n          onOpen={this.toggleModal}\n          page={page}\n          takeImages={this.takeImages}\n        />\n        {this.state.images.length > 0 && (\n          <Button onLoadMore={this.onLoadMore} />\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt={inputValue} />\n          </Modal>\n        )}\n\n        <ToastContainer autoClose={2500} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}