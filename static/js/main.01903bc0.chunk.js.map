{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ErrorResponse/ErrorResponse.js","components/Loader/Loader.js","servises/app.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleInputValueChange","event","setState","currentTarget","value","toLowerCase","handleOnSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","onChange","Component","ImageGalleryItem","onToggle","images","map","item","onClick","largeImageURL","src","webformatURL","alt","tags","id","ErrorResponse","message","console","log","LoaderFnc","color","height","width","timeout","fetchImages","page","a","fetch","then","response","ok","json","Promise","reject","Error","ImageGallery","status","prevProps","PrevState","prevState","result","onOpen","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","showModal","handleSearchSubmit","toggleModal","largeImage","style","maxWidth","margin","padding","length","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.01903bc0.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInputValueChange = event => {\n    // console.log(event.currentTarget.value.toLowerCase())\n    this.setState({ inputValue: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.inputValue.trim() === '') {\n      return toast.error('Please enter keyword.', {});\n    }\n\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleOnSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={this.handleInputValueChange}\n            // autocomplete=\"off\"\n            // autofocus\n            // placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\r\n\r\n// const ImageGalleryItem = ({ id, src, alt, modalSrc, toggle }) => (\r\n//   <li className=\"ImageGalleryItem\" key={id}>\r\n//     <img src={src} alt={alt[0]} className=\"ImageGalleryItem-image\" onClick={() => toggle(modalSrc)} />\r\n//   </li>\r\n// );\r\n\r\nconst ImageGalleryItem = ({ onToggle, images }) => {\r\n  return (\r\n    <>\r\n      {images.map(item => {\r\n        return (\r\n          <li onClick={() => onToggle(item.largeImageURL)} className=\"ImageGalleryItem\" key={item.id} >\r\n            <img\r\n              src={item.webformatURL}\r\n              alt={item.tags[0]}\r\n              className=\"ImageGalleryItem-image\"\r\n              data-largeimage={item.largeImageURL}\r\n            />\r\n          </li>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\n\nexport default function ErrorResponse({ message }) {\n  console.log('Ошибка');\n  return <h3>{message}</h3>;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function LoaderFnc() {\n  return (\n    <div className=\"loaderContainer\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={50}\n        width={50}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","export const fetchImages = async (inputValue, page) => {\r\n    await fetch(\r\n        `https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=${inputValue}&page=${page}&image_type=photo`,\r\n    )\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            return Promise.reject({\r\n                error: new Error(\r\n                    `Your request ${inputValue} did not return any results`,\r\n                ),\r\n            });\r\n        })\r\n\r\n}","// import React, { Component } from 'react';\n// import ImageGalleryItem from '../ImageGalleryItem';\n// import ErrorResponse from '../ErrorResponse';\n// import LoaderFnc from '../Loader';\n\n// export default class ImageGallery extends Component {\n//   state = {\n//     images: [],\n//     error: null,\n//     status: 'resolved',\n//     page: 1,\n//   };\n\n//   componentDidUpdate(prevProps, PrevState) {\n//     const inputValue = this.props.inputValue;\n\n//     if (prevProps.inputValue !== inputValue) {\n//       this.setState({ status: 'pending' });\n\n//       // setTimeout(() => {\n//       fetch(\n//         `https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=${inputValue}&page=${this.page}&image_type=photo`,\n//       )\n//         .then(response => {\n//           if (response.ok) {\n//             return response.json();\n//           }\n//           return Promise.reject({\n//             error: new Error(\n//               `Your request ${inputValue} did not return any results`,\n//             ),\n//           });\n//         })\n//         // .then(res => res.json())\n//         .then(images =>\n//           this.setState({ images: images.hits, status: 'resolved' }),\n//         )\n//         .catch(error => this.setState({ error, status: 'rejected' }));\n//       // }, 200);\n//     }\n//   }\n//   render() {\n//     const { error, status, images } = this.state;\n//     const { onOpen } = this.props;\n\n//     // if (status === 'idle') {\n//     //     return <h1>Что ищем?</h1>;\n//     // }\n\n//     if (status === 'pending') {\n//       return <LoaderFnc />;\n//     }\n\n//     if (status === 'rejected') {\n//       return <ErrorResponse message={error.message} />;\n//     }\n\n//     if (status === 'resolved') {\n//       return (\n//         <ul className=\"ImageGallery\">\n//           {/* {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n//             <ImageGalleryItem\n//               toggle={toggle}\n//               key={id}\n//               src={webformatURL}\n//               modalSrc={largeImageURL}\n//               alt={tags.split(' ')}\n//             />\n//           ))} */}\n\n//           <ImageGalleryItem images={images} onToggle={onOpen} />\n//         </ul>\n//       );\n//     }\n//   }\n// }\n\nimport React, { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport ErrorResponse from '../ErrorResponse';\nimport LoaderFnc from '../Loader';\nimport { fetchImages } from '../../servises/app';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    error: null,\n    status: 'resolved',\n    // page: 1,\n  };\n\n  async componentDidUpdate(prevProps, PrevState) {\n    const inputValue = this.props.inputValue;\n    const page = this.props.page;\n\n    if (prevProps.inputValue !== inputValue || prevProps.page !== page) {\n      try {\n        this.setState({ status: 'pending' });\n        const result = await fetchImages(inputValue, page)\n          .then(images =>\n            this.setState(prevState => ({\n              images: [...prevState.images, ...result], status: 'resolved'\n            }))\n          )\n      }\n      catch (error) { this.setState({ error, status: 'rejected' }) };\n    }\n  }\n  render() {\n    const { error, status, images } = this.state;\n    const { onOpen } = this.props;\n\n    // if (status === 'idle') {\n    //     return <h1>Что ищем?</h1>;\n    // }\n\n    if (status === 'pending') {\n      return <LoaderFnc />;\n    }\n\n    if (status === 'rejected') {\n      return <ErrorResponse message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem images={images} onToggle={onOpen} />\n        </ul>\n      );\n    }\n  }\n}\n\n","import React from 'react';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose(event);\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose(event);\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\n// Modal.propTypes = {\n//     onClose: PropTypes.func.isRequired,\n// };\n\nexport default Modal;\n","import { Component } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Searchbar from './components/Searchbar';\r\nimport ImageGallery from './components/ImageGallery';\r\nimport Button from './components/Button';\r\nimport Modal from './components/Modal';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    inputValue: '',\r\n    images: [],\r\n    page: 1,\r\n    showModal: false,\r\n  };\r\n\r\n  handleSearchSubmit = inputValue => {\r\n    console.log(inputValue);\r\n    this.setState({ inputValue });\r\n  };\r\n\r\n  onLoadMore = event => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n    this.handleSearchSubmit(this.state.inputValue);\r\n  };\r\n\r\n  toggleModal = (largeImage) => {\r\n    this.setState(({ showModal }) => ({\r\n      showModal: !showModal,\r\n    }));\r\n    this.setState({ largeImage: largeImage });\r\n    // this.setState({ largeImage: event.target.attributes['data-largeimage'].value })\r\n    // this.takeModalImage(event);\r\n  };\r\n\r\n  // takeModalImage = event => {\r\n  //   if (!event.target) {\r\n  //     return;\r\n  //   } else {\r\n  //     this.setState({\r\n  //       largeImage: event.target.attributes['data-largeimage'].value,\r\n  //     });\r\n  //   }\r\n\r\n  //   console.log(event.target.attributes);\r\n  //   this.toggleModal();\r\n  // };\r\n\r\n  // componentDidMount() {\r\n  //     // fetch('https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=flowers&image_type=photo')\r\n  //     //     .then(res => res.json())\r\n  //     //     .then(console.log);\r\n\r\n  //     this.setState({ loading: true })\r\n  //   fetch('https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=flowers&image_type=photo')\r\n  //       .then(res => res.json())\r\n  //       .then(image => this.setState({ image }))\r\n  //       .finally(() => this.setState({ loading: false }));\r\n\r\n  // }\r\n  render() {\r\n    const { inputValue, showModal, largeImage, page } = this.state;\r\n    return (\r\n      <div style={{ maxWidth: 1170, margin: '0 auto', padding: 20 }}>\r\n        <Searchbar onSubmit={this.handleSearchSubmit} />\r\n        <ImageGallery\r\n          inputValue={inputValue}\r\n          onOpen={this.toggleModal}\r\n          page={page}\r\n        />\r\n        {this.state.images.length > 0 && (\r\n          <Button onLoadMore={this.onLoadMore} />)}\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <img src={largeImage} alt={inputValue} />\r\n          </Modal>\r\n        )}\r\n\r\n        <ToastContainer autoClose={2500} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}