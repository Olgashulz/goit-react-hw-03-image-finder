{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ErrorResponse/ErrorResponse.js","components/Loader/Loader.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","state","inputValue","handleInputValueChange","event","setState","currentTarget","value","toLowerCase","handleOnSubmit","preventDefault","trim","toast","error","props","onSubmit","className","this","type","onChange","Component","ImageGalleryItem","onToggle","images","map","item","onClick","src","webformatURL","alt","tags","largeImageURL","id","ErrorResponse","message","console","log","LoaderFnc","color","height","width","timeout","ImageGallery","status","page","prevProps","PrevState","fetch","then","response","ok","json","Promise","reject","Error","hits","catch","onOpen","Button","onLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","App","image","showModal","largeImage","handleSearchSubmit","prevState","toggleModal","takeModalImage","attributes","style","maxWidth","margin","padding","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.845c3d58.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    inputValue: '',\n  };\n\n  handleInputValueChange = event => {\n    // console.log(event.currentTarget.value.toLowerCase())\n    this.setState({ inputValue: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleOnSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.inputValue.trim() === '') {\n      return toast.error('Please enter keyword.', {});\n    }\n\n    this.props.onSubmit(this.state.inputValue);\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleOnSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            value={this.state.inputValue}\n            onChange={this.handleInputValueChange}\n            // autocomplete=\"off\"\n            // autofocus\n            // placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\n\n// const ImageGalleryItem = ({ id, src, alt, modalSrc, toggle }) => (\n//   <li className=\"ImageGalleryItem\" key={id}>\n//     <img src={src} alt={alt[0]} className=\"ImageGalleryItem-image\" onClick={() => toggle(modalSrc)} />\n//   </li>\n// );\n\nconst ImageGalleryItem = ({ onToggle, images }) => {\n  return (\n    <>\n      {images.map(item => {\n        return (\n          <li onClick={onToggle} className=\"ImageGalleryItem\" key={item.id}>\n            <img\n              src={item.webformatURL}\n              alt={item.tags[0]}\n              className=\"ImageGalleryItem__image\"\n              data-largeimage={item.largeImageURL}\n            />\n          </li>\n        );\n      })}\n    </>\n  );\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\n\nexport default function ErrorResponse({ message }) {\n  console.log('Ошибка');\n  return <h3>{message}</h3>;\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nexport default function LoaderFnc() {\n  return (\n    <div className=\"loaderContainer\">\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#3f51b5\"\n        height={50}\n        width={50}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport ErrorResponse from '../ErrorResponse';\nimport LoaderFnc from '../Loader';\n\nexport default class ImageGallery extends Component {\n  state = {\n    images: [],\n    error: null,\n    status: 'resolved',\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, PrevState) {\n    const inputValue = this.props.inputValue;\n\n    if (prevProps.inputValue !== inputValue) {\n      this.setState({ status: 'pending' });\n\n      // setTimeout(() => {\n      fetch(\n        `https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=${inputValue}&page=${this.page}&image_type=photo`,\n      )\n        .then(response => {\n          if (response.ok) {\n            return response.json();\n          }\n          return Promise.reject({\n            error: new Error(\n              `Your request ${inputValue} did not return any results`,\n            ),\n          });\n        })\n        // .then(res => res.json())\n        .then(images =>\n          this.setState({ images: images.hits, status: 'resolved' }),\n        )\n        .catch(error => this.setState({ error, status: 'rejected' }));\n      // }, 200);\n    }\n  }\n  render() {\n    const { error, status, images } = this.state;\n    const { onOpen } = this.props;\n\n    // if (status === 'idle') {\n    //     return <h1>Что ищем?</h1>;\n    // }\n\n    if (status === 'pending') {\n      return <LoaderFnc />;\n    }\n\n    if (status === 'rejected') {\n      return <ErrorResponse message={error.message} />;\n    }\n\n    if (status === 'resolved') {\n      return (\n        <ul className=\"ImageGallery\">\n          {/* {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n            <ImageGalleryItem\n              toggle={toggle}\n              key={id}\n              src={webformatURL}\n              modalSrc={largeImageURL}\n              alt={tags.split(' ')}\n            />\n          ))} */}\n\n          <ImageGalleryItem images={images} onToggle={onOpen} />\n        </ul>\n      );\n    }\n  }\n}\n","import React from 'react';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n","import React, { Component } from 'react';\n// import PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  state = {};\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      this.props.onClose(event);\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      this.props.onClose(event);\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\n// Modal.propTypes = {\n//     onClose: PropTypes.func.isRequired,\n// };\n\nexport default Modal;\n","import { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Modal from './components/Modal';\n\nexport default class App extends Component {\n  state = {\n    inputValue: '',\n    image: {},\n    page: 1,\n    showModal: false,\n    largeImage: null,\n    alt: null,\n  };\n\n  handleSearchSubmit = inputValue => {\n    console.log(inputValue);\n    this.setState({ inputValue });\n  };\n\n  onLoadMore = event => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n    this.handleSearchSubmit(this.state.inputValue);\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n    // this.setState({ largeImage: event.target.attributes['data-largeimage'].value })\n    // this.takeModalImage(event);\n  };\n\n  takeModalImage = event => {\n    if (!event.target) {\n      return;\n    } else {\n      this.setState({\n        largeImage: event.target.attributes['data-largeimage'].value,\n      });\n    }\n\n    console.log(event.target.attributes);\n    this.toggleModal();\n  };\n\n  // componentDidMount() {\n  //     // fetch('https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=flowers&image_type=photo')\n  //     //     .then(res => res.json())\n  //     //     .then(console.log);\n\n  //     this.setState({ loading: true })\n  //   fetch('https://pixabay.com/api/?key=10507999-623e060cae639baa9b9819f90&q=flowers&image_type=photo')\n  //       .then(res => res.json())\n  //       .then(image => this.setState({ image }))\n  //       .finally(() => this.setState({ loading: false }));\n\n  // }\n  render() {\n    const { inputValue, showModal, largeImage, page } = this.state;\n    return (\n      <div style={{ maxWidth: 1170, margin: '0 auto', padding: 20 }}>\n        <Searchbar onSubmit={this.handleSearchSubmit} />\n        <ImageGallery\n          inputValue={inputValue}\n          onOpen={this.takeModalImage}\n          page={page}\n        />\n        <Button onLoadMore={this.onLoadMore} />\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt={inputValue} />\n          </Modal>\n        )}\n\n        <ToastContainer autoClose={2500} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}